{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","setCurrentSong","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","onChange","e","target","value","console","log","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b67ea741.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n  setCurrentSong,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n  //Event Handler\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n    console.log(e.target.value);\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if (currentIndex === 0) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) {\r\n          audioRef.current.play();\r\n        }\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  //Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            onChange={dragHandler}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler(\"skip-back\");\r\n          }}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler(\"skip-forward\");\r\n          }}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    //Add Active State\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    //check if the song is playing\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Through Trees\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n      artist: \"Sleepy Fish, The Field Tapes\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11251\",\r\n      color: [\"#dbe8df\", \"#252944\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import Util\nimport data from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}